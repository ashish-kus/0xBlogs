<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>0xBlogs</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on 0xBlogs</description>
    <generator>Hugo -- 0.150.1</generator>
    <language>en</language>
    <copyright>0xBlogs - Ashish-Kus </copyright>
    <lastBuildDate>Sat, 04 Oct 2025 23:47:32 +0530</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding Linux Filesystem Inode Tables</title>
      <link>http://localhost:1313/posts/4/</link>
      <pubDate>Sat, 04 Oct 2025 23:47:32 +0530</pubDate>
      <guid>http://localhost:1313/posts/4/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The inode table is one of the most fundamental data structures in Linux filesystems, yet it remains mysterious to many users. An inode, short for index node, is essentially a data structure that stores all the metadata about a file or directory except for two crucial pieces of information: the filename itself and the actual file content. This separation of concerns is what makes Unix-like filesystems elegant and efficient.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker in a Nutshell: Box It, Ship It, Forget It</title>
      <link>http://localhost:1313/posts/e3e0502f6219a9c5edb5e39c4e70f043/</link>
      <pubDate>Fri, 03 Oct 2025 04:40:53 +0530</pubDate>
      <guid>http://localhost:1313/posts/e3e0502f6219a9c5edb5e39c4e70f043/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Why wrestle with messy setups when you can box your app, ship it anywhere, and sip tea while it just works? No more “it works on my machine” excuses. Let’s breeze through Docker—no deep dives, just the good stuff.&lt;/p&gt;
&lt;p&gt;Modern applications are no longer simple. They rely on specific versions of libraries, frameworks, and configurations to run correctly. Setting up an application on one machine and then trying to run it on another often leads to the classic “it works on my machine” problem, frustrating both developers and operations teams.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Power of the Pipe: Chaining Linux Commands for Efficiency</title>
      <link>http://localhost:1313/posts/a2cc786af0d345abcacce0e9c5097a6a/</link>
      <pubDate>Wed, 01 Oct 2025 01:16:51 +0530</pubDate>
      <guid>http://localhost:1313/posts/a2cc786af0d345abcacce0e9c5097a6a/</guid>
      <description>&lt;p&gt;One of the most powerful and elegant features of the Linux command line is the &lt;strong&gt;pipe&lt;/strong&gt;, represented by the vertical bar: &lt;code&gt;|&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It looks simple, but this little symbol is the secret weapon for turning a handful of small, simple commands into a single, powerful tool.&lt;/p&gt;
&lt;h2 id=&#34;what-does-the-pipe--do&#34;&gt;What Does the Pipe (&lt;code&gt;|&lt;/code&gt;) Do?&lt;/h2&gt;
&lt;p&gt;In the simplest terms, the pipe takes the &lt;strong&gt;output of one command and feeds it directly as the input to a second command.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why Arch Is My Main Character Energy (But Ubuntu is Still the GOAT Starter Pack)</title>
      <link>http://localhost:1313/posts/ffd8bd1512001a08fb1f9279a6caaab6/</link>
      <pubDate>Tue, 30 Sep 2025 13:05:12 +0530</pubDate>
      <guid>http://localhost:1313/posts/ffd8bd1512001a08fb1f9279a6caaab6/</guid>
      <description>&lt;p&gt;Listen up, fam. We need to talk about my operating system journey. I started on Ubuntu, and honestly, &lt;strong&gt;no shade&lt;/strong&gt;. It&amp;rsquo;s the ultimate soft launch into the Linux world. But now? I&amp;rsquo;m firmly in my &lt;strong&gt;Arch Linux&lt;/strong&gt; era, and the vibes are just&amp;hellip; &lt;em&gt;chef&amp;rsquo;s kiss&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This isn&amp;rsquo;t a &amp;ldquo;flex culture&amp;rdquo; post. It&amp;rsquo;s about recognizing what each distro &lt;em&gt;slays&lt;/em&gt; at, and why I made the switch from a stable icon to the ultimate DIY challenge.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
